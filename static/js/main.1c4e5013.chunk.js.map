{"version":3,"sources":["Examples/TransitionGroup/TransitionGroup.module.scss","Sidebar/style.module.scss","Examples/Native/Native.module.scss","Sidebar/Sidebar.tsx","Examples/Native/Native.tsx","Examples/TransitionGroup/TransitionGroup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Sidebar","className","style","sidebar","role","classnames","to","Native","Modal","TransitionGroup__modal","TransitionGroup","useState","isModalOpen","openModal","isTransitionGroup","checkTransitionGroup","id","checked","onClick","type","htmlFor","CSSTransition","timeout","in","classNames","enter","enterActive","exit","exitActive","unmountOnExit","HashRoute","hash","routeProps","render","shouldRender","location","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,uBAAyB,gDAAgD,eAAe,sCAAsC,sBAAsB,6CAA6C,cAAc,qCAAqC,qBAAqB,8C,mBCAtVD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,QAAU,uBAAuB,MAAQ,qBAAqB,WAAW,wBAAwB,mBAAmB,kC,mBCAzKD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,6MCwB1CC,EApBW,WACxB,OACE,yBAAQC,UAAWC,IAAMC,QAASC,KAAK,SAAvC,UACE,kDAGA,qBAAKH,UAAWC,IAAM,YAAtB,SACE,qBAAKD,UAAWC,IAAM,YAAaE,KAAK,aAAxC,SACE,qBAAIH,UAAWI,IAAWH,IAAK,SAAcA,IAAM,qBAAnD,UACE,6BAAI,cAAC,IAAD,CAAMI,GAAG,UAAT,sBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,oBAAT,gCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,aAAT,yBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,kC,iBCRDC,EANU,WACvB,OACE,qBAAKN,UAAWC,IAAMK,U,yBCDpBC,EAAkB,kBACtB,qBAAKP,UAAWC,IAAMO,uBAAtB,yCAqCaC,EAlCS,WAAO,IAAD,EACKC,oBAAS,GADd,mBACrBC,EADqB,KACRC,EADQ,OAEsBF,oBAAS,GAF/B,mBAErBG,EAFqB,KAEFC,EAFE,KAG5B,OACE,sBAAKd,UAAWC,IAAMQ,gBAAtB,UACE,uBAAOM,GAAG,mBAAmBC,QAASH,EAAmBI,QAAS,kBAAMH,GAAsBD,IAAoBK,KAAK,aACvH,uBAAOC,QAAQ,mBAAf,mCACA,uBACA,wBAAQF,QAAS,kBAAML,GAAWD,IAAlC,wBACA,wBAEGE,GAAqBF,GAAe,cAAC,EAAD,IAGrCE,GACE,cAACO,EAAA,EAAD,CACAC,QAAS,IACPC,GAAIX,EACJY,WAAY,CACVC,MAAOvB,IAAM,gBACbwB,YAAaxB,IAAM,uBACnByB,KAAMzB,IAAM,eACZ0B,WAAY1B,IAAM,uBAEpB2B,eAAa,EATf,SAWE,cAAC,EAAD,UClBNC,G,MAAsC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAASC,EAAiB,wBACvE,OACE,cAAC,IAAD,CACEC,OAAQ,YAAmB,IACnBC,EADkB,EAAfC,SACqBJ,OAAT,WAAsBA,GAE3C,OAAO,cAACV,EAAA,EAAD,CACLE,GAAIW,EACJZ,QAAS,IACTE,WAAW,OACXK,eAAa,EAJR,SAML,qBAAK5B,UAAU,OAAf,SAEIiC,GAAgB,cAAC,IAAD,eAAWF,aAyB1BI,MAlBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,mBAAjB,SACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAW8B,KAAK,SAAhB,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAWA,KAAK,mBAAhB,SACE,cAAC,EAAD,eCjCGO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c4e5013.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransitionGroup\":\"TransitionGroup_TransitionGroup__2RL-U\",\"TransitionGroup__modal\":\"TransitionGroup_TransitionGroup__modal__2iwhE\",\"Modal--enter\":\"TransitionGroup_Modal--enter__1ywxW\",\"Modal--enter-active\":\"TransitionGroup_Modal--enter-active__2p7ti\",\"Modal--exit\":\"TransitionGroup_Modal--exit__11S4r\",\"Modal--exit-active\":\"TransitionGroup_Modal--exit-active__PABbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unstyled\":\"style_unstyled__yL-PY\",\"sidebar\":\"style_sidebar__1BMGg\",\"swing\":\"style_swing__1SYFR\",\"main-nav\":\"style_main-nav__bZVlY\",\"list-hover-slide\":\"style_list-hover-slide__1YC9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Native\":\"Native_Native__23ntv\",\"move\":\"Native_move__3mRsV\"};","import * as React from 'react'\nimport classnames from 'classnames'\nimport { Link } from 'react-router-dom'\nimport style from './style.module.scss'\n\nconst Sidebar: React.FC = () => {\n  return (\n    <header className={style.sidebar} role=\"banner\">\n      <h1>\n        React Animations\n      </h1>\n      <div className={style['nav-wrap']}>\n        <nav className={style['main-nav']} role=\"navigation\">\n          <ul className={classnames(style['unstyled'], style['list-hover-slide'])}>\n            <li><Link to='#native'>Native</Link></li>\n            <li><Link to=\"#transition-group\">Transition Group</Link></li>\n            <li><Link to=\"#greensock\">GreenSock</Link></li>\n            <li><Link to=\"#threejs\">Threejs</Link></li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nexport default Sidebar","import React from 'react'\nimport style from './Native.module.scss'\n\nconst Native: React.FC = () => {\n  return (\n    <div className={style.Native} />\n  )\n}\n\nexport default Native","import React, { useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport style from './TransitionGroup.module.scss'\n\nconst Modal: React.FC = () => (\n  <div className={style.TransitionGroup__modal}>Lorem ipsum dolor sit amet</div>\n)\n\nconst TransitionGroup = () => {\n  const [isModalOpen, openModal] = useState(false)\n  const [isTransitionGroup, checkTransitionGroup] = useState(false)\n  return (\n    <div className={style.TransitionGroup}>\n      <input id='transition-check' checked={isTransitionGroup} onClick={() => checkTransitionGroup(!isTransitionGroup)} type='checkbox' />\n      <label htmlFor='transition-check'>With Transition Group</label>\n      <br />\n      <button onClick={() => openModal(!isModalOpen)}>Open Modal</button>\n      <br />\n      {\n        !isTransitionGroup && isModalOpen && <Modal />\n      }\n      {\n        isTransitionGroup && (\n          <CSSTransition\n          timeout={300}\n            in={isModalOpen}\n            classNames={{\n              enter: style['Modal--enter'],\n              enterActive: style['Modal--enter-active'],\n              exit: style['Modal--exit'],\n              exitActive: style['Modal--exit-active']\n            }}\n            unmountOnExit\n          >\n            <Modal />\n          </CSSTransition>\n        )\n      }\n    </div>\n  )\n}\n\nexport default TransitionGroup\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  RouteProps\n} from \"react-router-dom\";\nimport { CSSTransition } from 'react-transition-group'\nimport Sidebar from './Sidebar/Sidebar'\nimport Native from './Examples/Native/Native'\nimport TransitionGroup from './Examples/TransitionGroup/TransitionGroup'\nimport './App.css';\n\ninterface HashRouteProps extends RouteProps {\n  hash: string\n}\n\nconst HashRoute: React.FC<HashRouteProps> = ({ hash, ...routeProps }) => {\n  return (\n    <Route\n      render={({ location }) => {\n        const shouldRender = location.hash === `#${hash}`\n\n        return <CSSTransition\n          in={shouldRender}\n          timeout={300}\n          classNames=\"page\"\n          unmountOnExit\n        >\n          <div className=\"page\">\n\n            { shouldRender && <Route {...routeProps} /> }\n          </div>\n        </CSSTransition>\n      }} />\n  )\n}\n\nfunction App() {\n  return (\n    <Router basename='react-animations'>\n      <div className=\"App\">\n        <Sidebar />\n        <div className=\"App__content\">\n          <HashRoute hash=\"native\">\n            <Native />\n          </HashRoute>\n          <HashRoute hash=\"transition-group\">\n            <TransitionGroup />\n          </HashRoute>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}